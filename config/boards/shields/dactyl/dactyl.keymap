#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define NUM 3



&sl {
    release-after-ms = <5000>;
};

&kscan0 {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
            &kp Q  &kp W    &kp E     &kp R     &kp T          &kp Y     &kp U     &kp I     &kp O     &kp P
            &kp A  &kp S    &kp D     &kp F     &kp G          &kp H     &kp J     &kp K     &kp L     &kp SEMI
     &mt LSHIFT Z  &kp X    &kp C     &kp V     &kp B          &kp N     &kp M     &kp COMMA &kp DOT   &mt RSHIFT SLASH
                   &kp LBKT &kp RBKT                                               &kp MINUS &kp EQUAL
                        &lt RAISE BSPC  &lt LOWER DEL          &lt LOWER RET   &lt RAISE SPACE
                        &kp LCTRL       &kp LGUI               &kp K_APP       &kp LCTRL
                        &kp LALT        &to NUM                &to NUM         &kp LALT
            >;
        };

        lower_layer {
            bindings = <
         &kp ESC   &trans   &trans    &trans    &trans          &kp C_VOL_UP     &trans     &trans       &trans       &kp BACKSLASH
         &kp TAB   &trans   &trans    &kp F4    &trans          &kp C_MUTE       &kp HOME   &kp PG_UP    &trans       &kp SINGLE_QUOTE
  &mt LSHIFT GRAVE &kp INS  &trans    &trans    &trans          &kp C_VOL_DN     &kp END    &kp PG_DN    &trans       &mt RSHIFT GRAVE
                   &kp LEFT &kp RIGHT                                                &kp UP    &kp DOWN
                                   &trans    &trans          &trans    &trans
                                   &trans    &trans          &trans    &trans
                                   &trans    &trans          &trans    &trans
             >;
        };


        raise_layer {
            bindings = <
        &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT       &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR
        &kp N1    &kp N2   &kp N3    &kp N4    &kp N5          &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
    &mt LSHIFT F1 &kp F2   &kp F3    &kp F4    &kp F5          &kp F6    &kp F7    &kp F8    &kp F9    &mt RSHIFT F10
                  &kp F11  &kp F12                                                 &kp HOME  &kp END
                                     &trans    &trans          &trans    &trans
                                     &trans    &trans          &trans    &trans
                                     &trans    &trans          &trans    &trans
            >;
        };

        num_layer {
            bindings = <
       &kp C_VOL_UP    &kp C_PREV  &kp C_PLAY   &kp C_NEXT &bt BT_CLR        &kp KP_DIVIDE   &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS
       &kp C_MUTE      &none       &none        &none      &bt BT_NXT        &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS
       &kp C_VOL_DN    &none       &none        &none      &bt BT_PRV        &none           &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_EQUAL
                       &kp LEFT    &kp RIGHT                                                           &kp KP_N0 &kp KP_DOT
                                                &kp BSPC   &kp DEL           &kp RET    &kp SPACE
                                                &kp LCTRL  &kp LGUI          &kp K_APP  &kp LCTRL
                                                &kp LALT   &to BASE          &to BASE   &kp LALT
            >;
        };
    };
};
